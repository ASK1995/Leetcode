class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if(len(grid) == 0):
            return 0
        count = 0

        for m in range(len(grid)):
            for n in range(len(grid[0])):
                if(grid[m][n] == '1'):
                    self.dfs(m, n, grid)
                    count += 1
        return count

    def dfs(self, m, n, grid):
        if(m < 0 or n <0 or m > len(grid) - 1 or n > len(grid[0]) - 1 or grid[m][n] != '1'):
            return
        grid[m][n] = '0'

        self.dfs(m - 1, n, grid)
        self.dfs(m, n - 1, grid)
        self.dfs(m + 1, n, grid)
        self.dfs(m, n + 1, grid)
        