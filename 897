# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def increasingBST(self, root: TreeNode) -> TreeNode:
        inorder = self.inorder(root)
        head = TreeNode()
        head.val = inorder[0]
        head.left = None
        node = head
        for index in range(1, len(inorder)):
            node.right = TreeNode()
            node = node.right
            node.val = inorder[index]
            node.left = None
        
        node.right = None
        return head
    
    def inorder(self, root):
        if(root == None):
            return []
        
        return self.inorder(root.left) + [root.val] + self.inorder(root.right)