# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
from collections import defaultdict

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        nodes = defaultdict(lambda:-1)
        i = 0
        
        while(head != None):
            if(nodes[head] != -1):
                return head
            nodes[head] = i
            i += 1
            head = head.next
        
        return None