# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDiffInBST(self, root: Optional[TreeNode]) -> int:
        l = self.inorder(root)
        i1, min_diff = 1, float('inf')
        while(i1 < len(l)):
            min_diff = min(min_diff, l[i1] - l[i1 - 1])
            i1 += 1
        return min_diff
        
    def inorder(self, root):
        if(root == None):
            return []
        return self.inorder(root.left) + [root.val] + self.inorder(root.right)
    