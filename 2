# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        count = 0
        head, current = None, None

        while(l1 != None and l2 != None):
            total = l1.val + l2.val + count
            count = 0
            if(total >= 10):
                count = total//10
                total -= 10
            if(head == None):
                head = ListNode()
                current = head
            else:
                node = ListNode()
                current.next = node
                current = current.next
            current.val = total
            l1 = l1.next
            l2 = l2.next
            
        
        while(l1 != None):
            total = l1.val + count
            count = 0
            if(total >= 10):
                count = total//10
                total -= 10
            if(head == None):
                head = ListNode()
                current = head
            else:
                node = ListNode()
                current.next = node
                current = current.next
            current.val = total
            l1 = l1.next
        
        while(l2 != None):
            total = l2.val + count
            count = 0
            if(total >= 10):
                count = total//10
                total -= 10
            if(head == None):
                head = ListNode()
                current = head
            else:
                node = ListNode()
                current.next = node
                current = current.next
            current.val = total
            l2 = l2.next
        
        if(count != 0):
            current.next = ListNode()
            current = current.next
            current.val = 1
        current.next = None
        return head
        